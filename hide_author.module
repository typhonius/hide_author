<?php
/**
 * @file
 * Code for the Hide Author module.
 */

// TODO Create an admin page for users to peruse who actually posted stuff.
// also add the option to allow deletes from the table on node_delete?
/**
 * Implements hook_menu
 */
function hide_author_menu() {
  $items = array();
  $items['admin/config/content/hide_author'] = array(
    'title' => 'Hide Author',
    'description' => 'Access administrative pages for Hide Author module',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hide_author_admin_page'),
    'file' => 'hide_author.admin.inc',
    'access arguments' => array('administer hide author'),
  );

  return $items;
}

/**
 * Implements hook_permissions
 */
function hide_author_permission() {
  return array(
    'administer hide author' => array(
      'title' => t('Hide Author'),
      'description' => t('Allows administrative access to the hide author page'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_node_insert
 * @param object $node
 */
function hide_author_node_insert($node) {
  if ($node->type == 'confession' && $node->field_anonymous_post['und'][0]['value'] && $node->is_new) {
    $record = array('nid' => $node->nid, 'uid' => $node->uid);
    drupal_write_record('hide_author', $record);
    $node->uid = 0;
    drupal_write_record('node', $node, 'nid');
  }
}

/**
 * Implements hook_node_delete
 * @param object $node
 */
function hide_author_node_delete($node) {
  if ($node->type == 'confession') {
    db_delete('hide_author')
      ->condition('nid', $node->nid)
      ->execute();
  }
}
